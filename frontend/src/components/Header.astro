---
import bffLogo from '@/assets/bff-logo.png';
import IconBurger from '@/icons/IconBurger.astro';
import Button from '@/components/Button.astro';

const { headerNavItems } = Astro.props;
---

<header class="header">
  <div class="header__container">
    <a href="#">
      <img
        src={bffLogo.src}
        class="header__logo header__nav-item"
        alt="Bear Fired Fodder"
        width="90"
        height="100"
      />
    </a>

    <div class="header__nav">
      <nav class="header__nav-items" id="header__nav-items">
        {
          headerNavItems.map(navItem => (
            <div class="header__nav-list-item header__nav-item">
              <a class="header__nav-link" href={`#${navItem.link}`}>
                {navItem.name}
              </a>
            </div>
          ))
        }
      </nav>

      <div class="header__nav-cta header__nav-item">
        <Button text="Get in touch" link={`#${headerNavItems[3].link}`} />
      </div>

      <button id="menuToggleButton" class="header__nav-toggle" aria-label="Toggle navigation">
        <IconBurger />
      </button>
    </div>
  </div>
</header>

<script>
  import debounce from 'debounce';
  import detectBreakpoint from '@/utils/detect-breakpoint';
  import addResizeListener from '@/utils/resize-handler';

  const menuButton = document.querySelector('#menuToggleButton');
  const headerNavItemsContainer = document.querySelector('#header__nav-items');
  const headerNavItems = document.querySelectorAll('.header__nav-item');
  const detectScreenSize = 'mobile';
  let mobileBreakpoint = detectBreakpoint(detectScreenSize);

  const handleMenuToggle = () => {
    menuButton.classList.toggle('header__nav-toggle--active');
    headerNavItemsContainer.classList.toggle('header__nav-items--active');
  };

  const handleMenuClose = () => {
    menuButton.classList.remove('header__nav-toggle--active');
    headerNavItemsContainer.classList.remove('header__nav-items--active');
  };

  const handleResize = debounce(() => {
    mobileBreakpoint = detectBreakpoint(detectScreenSize);
  }, 300);

  headerNavItems.forEach(item => {
    if (!mobileBreakpoint) return;
    item.addEventListener('click', handleMenuClose);
  });

  menuButton.addEventListener('click', handleMenuToggle);
  addResizeListener(handleResize);
</script>

<style lang="scss" is:global>
  @import '@/scss/resources/breakpoints';
  @import '@/scss/resources/container';
  @import '@/scss/resources/hover-state';

  .header {
    background-color: var(--color-black);
    position: fixed;
    width: 100%;
    z-index: 999;

    &__container {
      @include container;

      display: flex;
      justify-content: space-between;
    }

    &__logo {
      width: 90px;
      height: auto;
    }

    &__nav {
      display: flex;
      align-items: center;
    }

    &__nav-toggle {
      background-color: transparent;
      border: none;
      padding: 0;
      cursor: pointer;
      @media screen and (min-width: $breakpoint-mobile) {
        display: none;
      }
    }

    &__nav-items {
      display: block;

      @media screen and (max-width: calc($breakpoint-mobile - 1px)) {
        position: absolute;
        top: var(--header-height);
        left: 0;
        width: 100vw;
        height: calc(100vh - var(--header-height));
        overflow: hidden;
        background-color: var(--color-black);
        transform: translateX(-100%);
        transition: transform 0.3s ease;

        &--active {
          transform: translateX(0);
        }
      }

      @media screen and (min-width: $breakpoint-mobile) {
        display: flex;
        gap: var(--spacer-m);
      }

      font-size: 1.8rem;
      font-weight: var(--font-weight-semibold);
    }

    &__nav-list-item {
      padding: var(--spacer-s) 3rem;

      &:first-child {
        padding-top: 3rem;
      }

      &:last-child {
        padding-bottom: 3rem;
      }

      @media screen and (min-width: $breakpoint-mobile) {
        padding: 0 !important;
      }
    }

    &__nav-link {
      @include hover-state;

      position: relative;
      display: block;
      width: 100%;
      color: var(--color-white);
      text-decoration: none;
    }

    &__nav-cta {
      margin-right: var(--spacer-s);

      @media screen and (min-width: $breakpoint-mobile) {
        display: none;
      }
    }
  }
</style>
