---
import getUrlForImage from '@/utils/getUrlForImage';
import Button from '@/components/Button.astro';

const { title, image, mobileImage, menuLink } = Astro.props;
---

<section class="hero">
  <div class="hero__inner" data-desktop-image={getUrlForImage(image)} data-mobile-image={getUrlForImage(mobileImage)}>
    <div class="hero__content">
      <h1 class="hero__title">{title}</h1>
      <Button text="See our menu" link={`#${menuLink}`} />
    </div>
  </div>
</section>

<script>
import debounce from 'lodash/debounce';
import setImage from '@/utils/set-image';
import showSection from '@/utils/show-section';

const hero = document.querySelector('.hero__content');
const heroInner = document.querySelector('.hero__inner');
const breakpoint = getComputedStyle(document.documentElement).getPropertyValue(
  '--breakpoint-tablet'
);

const setMobileBreakpoint = () => !window.matchMedia(`(min-width: ${breakpoint})`).matches;
let mobileBreakpoint = setMobileBreakpoint();

const handleResize = debounce(() => {
  mobileBreakpoint = setMobileBreakpoint();
  setImage(heroInner, mobileBreakpoint);
}, 300);

setImage(heroInner, mobileBreakpoint);
showSection(hero);

window.addEventListener('resize', handleResize);
</script>

<style lang="scss">
  @import '@/scss/resources/container';

  .hero {
    color: var(--color-white);
    padding-top: var(--header-height);

    &__inner {
      display: flex;
      height: 60vh;
      background-size: cover;
      background-position: center bottom;
      background-repeat: no-repeat;
    }

    &__content {
      @include container-compact;

      width: 100%;
      margin-top: 15vh;
      opacity: 0;
      transform: translateY(20px);
      transition: all 0.5s ease-in-out;
    }

    &__title {
      max-width: 600px;
    }
  }
</style>
