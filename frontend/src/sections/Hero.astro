---
import * as imageHandler from '@/utils/image-handler';
import Button from '@/components/Button.astro';

const { title, image, mobileImage, menuLink } = Astro.props;
---

<section class="hero">
  <div
    class="hero__inner"
    data-desktop-image={imageHandler.getUrl(image)}
    data-mobile-image={imageHandler.getUrl(mobileImage)}
  >
    <div class="hero__content">
      <h1 class="hero__title">{title}</h1>
      <Button text="See our menu" link={`#${menuLink}`} />
    </div>
  </div>
</section>

<script>
  import debounce from 'debounce';
  import setImage from '@/utils/set-image';
  import showSection from '@/utils/show-section';
  import addResizeListener from '@/utils/resize-handler';
  import detectBreakpoint from '@/utils/detect-breakpoint';

  const heroInner = document.querySelector('.hero__inner');

  const detectScreenSize = 'tablet';
  let mobileBreakpoint = detectBreakpoint(detectScreenSize);

  const handleResize = debounce(() => {
    const resizeBreakpoint = detectBreakpoint(detectScreenSize);

    if (mobileBreakpoint === resizeBreakpoint) return;

    mobileBreakpoint = detectBreakpoint(detectScreenSize);
    setImage(heroInner, mobileBreakpoint);
  }, 300);

  addResizeListener(handleResize);
  setImage(heroInner, mobileBreakpoint);
  showSection('.hero__content');
</script>

<style lang="scss">
  @import '@/scss/resources/container';

  .hero {
    color: var(--color-white);
    padding-top: var(--header-height);

    &__inner {
      display: flex;
      height: 60vh;
      background-size: cover;
      background-position: center bottom;
      background-repeat: no-repeat;
    }

    &__content {
      @include container-compact;

      width: 100%;
      margin-top: 15vh;
      opacity: 0;
      transform: translateY(20px);
      transition: all 0.5s ease-in-out;
    }

    &__title {
      max-width: 600px;
    }
  }
</style>
