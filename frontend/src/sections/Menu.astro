---
import getUrlForImage from '@/utils/getUrlForImage';

const { title, copy, image, mobileImage, menuItems, id } = Astro.props;
---

<section
  id={id}
  class="menu"
  data-desktop-image={`${getUrlForImage(image).url()}`}
  data-mobile-image={`${getUrlForImage(mobileImage).url()}?w=768`}
>
  <div class="menu__overlay"></div>
  <div class="container menu__container">
    <h2>{title}</h2>
    <div class="menu__content">
      <div class="menu__copy">
        <p>{copy}</p>
      </div>

      <div class="menu__items">
        {
          menuItems.map(menuItem => (
            <div class="menu__item">
              <h3>
                {menuItem.title}
                {menuItem.dietaryRequirements?.length > 0 && (
                  <span class="menu__item-dietary-requirements">
                    ({menuItem.dietaryRequirements.join(', ')})
                  </span>
                )}
              </h3>
              {menuItem.ingredients?.length > 0 && (
                <p class="menu__item-ingredients">{menuItem.ingredients.join(', ')}</p>
              )}
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<script>
import debounce from 'lodash/debounce';
import setImage from '@/utils/set-image';
import showSection from '@/utils/show-section';

const menu = document.querySelector('.menu');
const menuContainer = document.querySelector('.menu__container');
const breakpoint = getComputedStyle(document.documentElement).getPropertyValue(
  '--breakpoint-tablet'
);

const setMobileBreakpoint = () => !window.matchMedia(`(min-width: ${breakpoint})`).matches;
let mobileBreakpoint = setMobileBreakpoint();

const handleResize = debounce(() => {
  mobileBreakpoint = setMobileBreakpoint();
  setImage(menu, mobileBreakpoint);
}, 300);

setImage(menu, mobileBreakpoint);
showSection(menuContainer);

window.addEventListener('resize', handleResize);
</script>

<style lang="scss">
  @import '@/scss/resources/breakpoints';

  .menu {
    position: relative;
    background: no-repeat center bottom;
    background-size: cover;
    color: var(--color-white);

    &__overlay {
      position: absolute;
      width: 100%;
      height: 100%;
      background-color: var(--color-red-alpha);

      &:before {
        position: absolute;
        width: 100%;
        height: 100%;
        background-color: #00000030;
        content: '';
      }
    }

    &__container {
      position: relative;
      z-index: 1;
      opacity: 0;
      transform: translateY(20px);
      transition: all 0.5s ease-in-out;
    }

    &__content {
      display: flex;
      gap: var(--spacer-m);
      flex-direction: column;

      @media screen and (min-width: $breakpoint-tablet) {
        flex-direction: row;
        gap: var(--spacer-l);
      }
    }

    &__copy {
      @media screen and (min-width: $breakpoint-tablet) {
        flex: 0 0 33%;
      }
    }

    &__items {
      display: grid;
      gap: var(--spacer-m);

      @media screen and (min-width: $breakpoint-tablet) {
        flex-grow: 1;
        grid-template-columns: 1fr 1fr;
      }
    }

    &__item {
      display: flex;
      flex-direction: column;
      gap: var(--spacer-s);

      &-dietary-requirements {
        font-size: 2rem;
        font-weight: var(--font-weight-semibold);
      }

      &-ingredients {
        font-size: 1.8rem;
        font-weight: 200;
      }
    }
  }
</style>
