---
import getUrlForImage from '@/utils/getUrlForImage';
import Button from '@/components/Button.astro';

const { title, images, id } = Astro.props;
---

<section id={id} class="gallery gallery--gradient">
  <div class="container gallery__container">
    <h2>{title}</h2>
    <div class="gallery__image-wrapper">
      <div id="gallery-masonary-container" class="gallery__images">
        {images.map(image => <img class="gallery__image" data-src={`${getUrlForImage(image).url()}?w=640&q=80`} alt={image.alt || images[0]._key} />)}
      </div>
    </div>

    <div class="gallery__load-more">
      <Button tag="button" text="Load more" />
    </div>
  </div>
</section>

<script>
import debounce from 'lodash/debounce';
import Macy from 'macy';
import showSection from '@/utils/show-section';

const gallery = document.querySelector('.gallery');
const galleryImageWrapper = document.querySelector('.gallery__image-wrapper');
const masonaryWrapper = document.querySelector('#gallery-masonary-container');
const galleryImages = document.querySelectorAll('.gallery__image');
const loadMoreButton = document.querySelector('.gallery__load-more');
const breakpoint = getComputedStyle(document.documentElement).getPropertyValue(
  '--breakpoint-desktop'
);

const setMobileBreakpoint = () => !window.matchMedia(`(min-width: ${breakpoint})`).matches;
let mobileBreakpoint = setMobileBreakpoint();

const setInitialGalleryHeight = () => (mobileBreakpoint ? 500 : 750);
let initialGalleryHeight = setInitialGalleryHeight();
document.documentElement.style.setProperty('--gallery-height', `${initialGalleryHeight}px`);

const setLoadMoreTotal = () => Math.ceil(masonaryWrapper.clientHeight / initialGalleryHeight);
let galleryLoadMoreTotal = setLoadMoreTotal();
let loadMoreCount = 1;

const handleGalleryLoad = () => {
  galleryImages.forEach(image => {
    const imgSrc = image.dataset.src;
    image.setAttribute('src', imgSrc);
  });
};

const initMasonaryGrid = () => {
  return Macy({
    container: '#gallery-masonary-container',
    margin: 20,
    columns: 4,
    breakAt: {
      1440: 3,
      1024: 2,
      680: 1,
    },
  });
};

const resetGalleryToTop = () => {
  galleryImageWrapper.scrollTop = 0;
  galleryImageWrapper.style.maxHeight = `${initialGalleryHeight}px`;
};

const handleLoadMoreClick = () => {
  loadMoreCount++;

  const galleryHeight = initialGalleryHeight * loadMoreCount;
  galleryImageWrapper.style.maxHeight = `${galleryHeight}px`;

  if (loadMoreCount === galleryLoadMoreTotal) {
    loadMoreButton.style.display = 'none';
    gallery.classList.remove('gallery--gradient');
  }
};

const handleResize = debounce(() => {
  mobileBreakpoint = setMobileBreakpoint();
  initialGalleryHeight = setInitialGalleryHeight();
  galleryLoadMoreTotal = setLoadMoreTotal();
  loadMoreCount = 1;

  resetGalleryToTop();

  document.documentElement.style.setProperty('--gallery-height', `${initialGalleryHeight}px`);
  loadMoreButton.style.display = 'flex';
  gallery.classList.add('gallery--gradient');
}, 300);

const handleGalleryIntersection = async () => {
  await handleGalleryLoad();
  const macy = await initMasonaryGrid();

  macy.runOnImageLoad(handleResize);
  macy.on(macy.constants.EVENT_RESIZE, handleResize);
  galleryImageWrapper.style.opacity = 1;
};

showSection(gallery, handleGalleryIntersection);
loadMoreButton.addEventListener('click', () => handleLoadMoreClick());
</script>

<style lang="scss" is:global>
  .gallery {
    position: relative;
    background: var(--color-grey) url('/images/bff-flame-cutoff-gallery.png') no-repeat left bottom;
    background-size: auto 270px;

    &--gradient {
      &:after {
      position: absolute;
      content: '';
      width: 100%;
      height: 100px;
      background: transparent;
      background: linear-gradient(
        0deg,
        rgba(2, 0, 36, 1) 0%,
        rgba(48, 48, 48, 1) 0%,
        rgba(255, 255, 255, 0) 100%
      );
      bottom: 0;
      left: 0;
    }
    }

    &__container {
      padding-bottom: 0;
    }

    &__image-wrapper {
      opacity: 0;
      position: relative;
      max-height: var(--gallery-height);
      overflow: hidden;
      transition: all 0.5s ease-in-out;
    }

    &__load-more {
      display: flex;
      position: absolute;
      justify-content: center;
      left: 0;
      right: 0;
      bottom: var(--spacer-s);
      z-index: 9999;
      margin: auto;
      cursor: pointer;
    }
  }
</style>
